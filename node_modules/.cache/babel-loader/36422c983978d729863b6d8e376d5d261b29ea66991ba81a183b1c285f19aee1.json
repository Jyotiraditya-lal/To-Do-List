{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vaibh\\\\WebDevSharpner\\\\MoviesList\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [fetchMovies, setFetchMovies] = useState([]);\n  const [IsLoading, setisLoading] = useState(false);\n  async function fetchMovieshandler() {\n    setisLoading(true);\n    const response = await fetch('https://swapi.dev/api/films/');\n    const data = await response.json();\n    const TransformerdData = data.results.map(MovieData => {\n      return {\n        id: MovieData.episode_id,\n        title: MovieData.title,\n        openingText: MovieData.opening_crawl,\n        releaseDate: MovieData.release_date\n      };\n    });\n    setFetchMovies(TransformerdData);\n    setisLoading(false);\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMovieshandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [IsLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: fetchMovies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"WSr/czOdGwg/rTMZPJIrn3GpMNM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MoviesList","jsxDEV","_jsxDEV","App","_s","fetchMovies","setFetchMovies","IsLoading","setisLoading","fetchMovieshandler","response","fetch","data","json","TransformerdData","results","map","MovieData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","Fragment","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","movies","_c","$RefreshReg$"],"sources":["C:/Users/vaibh/WebDevSharpner/MoviesList/src/App.js"],"sourcesContent":["import React,{useState} from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n\n  const [fetchMovies,setFetchMovies]=useState([])\n  const [IsLoading,setisLoading]=useState(false)\n\n\n  async function fetchMovieshandler(){\n    \n    setisLoading(true)\n    const response= await fetch('https://swapi.dev/api/films/')\n    const data= await response.json()\n\n    const TransformerdData=data.results.map(MovieData=>{\n        return { \n            id: MovieData.episode_id,\n            title: MovieData.title,\n            openingText: MovieData.opening_crawl,\n            releaseDate: MovieData.release_date\n          }\n       }\n      )\n      setFetchMovies(TransformerdData)\n      setisLoading(false)\n  }\n  \n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMovieshandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {IsLoading && <p>Loading</p>}\n        <MoviesList movies={fetchMovies} />\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AAEpC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,WAAW,EAACC,cAAc,CAAC,GAACP,QAAQ,CAAC,EAAE,CAAC;EAC/C,MAAM,CAACQ,SAAS,EAACC,YAAY,CAAC,GAACT,QAAQ,CAAC,KAAK,CAAC;EAG9C,eAAeU,kBAAkBA,CAAA,EAAE;IAEjCD,YAAY,CAAC,IAAI,CAAC;IAClB,MAAME,QAAQ,GAAE,MAAMC,KAAK,CAAC,8BAA8B,CAAC;IAC3D,MAAMC,IAAI,GAAE,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAEjC,MAAMC,gBAAgB,GAACF,IAAI,CAACG,OAAO,CAACC,GAAG,CAACC,SAAS,IAAE;MAC/C,OAAO;QACHC,EAAE,EAAED,SAAS,CAACE,UAAU;QACxBC,KAAK,EAAEH,SAAS,CAACG,KAAK;QACtBC,WAAW,EAAEJ,SAAS,CAACK,aAAa;QACpCC,WAAW,EAAEN,SAAS,CAACO;MACzB,CAAC;IACJ,CACD,CAAC;IACDlB,cAAc,CAACQ,gBAAgB,CAAC;IAChCN,YAAY,CAAC,KAAK,CAAC;EACvB;EAGA,oBACEN,OAAA,CAACJ,KAAK,CAAC2B,QAAQ;IAAAC,QAAA,gBACbxB,OAAA;MAAAwB,QAAA,eACExB,OAAA;QAAQyB,OAAO,EAAElB,kBAAmB;QAAAiB,QAAA,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD,CAAC,eACV7B,OAAA;MAAAwB,QAAA,GACGnB,SAAS,iBAAIL,OAAA;QAAAwB,QAAA,EAAG;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC5B7B,OAAA,CAACF,UAAU;QAACgC,MAAM,EAAE3B;MAAY;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAErB;AAAC3B,EAAA,CArCQD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AAuCZ,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}