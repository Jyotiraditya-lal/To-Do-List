{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vaibh\\\\WebDevSharpner\\\\ToDoList\\\\src\\\\Components\\\\CompletedTasks\\\\CompletedTasks.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport TaskDetails from \"../AddTasks/TaskDetails\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Completedtasks = () => {\n  _s();\n  const [completed, setCompleted] = useState([]);\n  const userId = useSelector(state => state.Auth.UID);\n  const fetchCompletedTasks = useCallback(async () => {\n    try {\n      const response = await fetch(`https://to-do-list-3e614-default-rtdb.asia-southeast1.firebasedatabase.app/Completed/${userId}.json`);\n      if (!response.ok) {\n        throw new Error('Could not fetch completed tasks');\n      }\n      const data = await response.json();\n      const loadedTasks = [];\n      for (const key in data) {\n        loadedTasks.push({\n          id: key,\n          tasks: data[key].tasks,\n          startDate: data[key].startDate,\n          endDate: data[key].endDate,\n          description: data[key].description\n        });\n      }\n      console.log(loadedTasks);\n      setCompleted(loadedTasks);\n    } catch (err) {\n      alert(err.message);\n    }\n  }, [userId]);\n  useEffect(() => {\n    fetchCompletedTasks();\n  }, [fetchCompletedTasks]);\n  const DeleteTaskHandler = async id => {\n    try {\n      const response = await fetch(`https://to-do-list-3e614-default-rtdb.asia-southeast1.firebasedatabase.app/Tasks/${userId}/${id}.json`, {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        alert('Updated');\n      } else {\n        throw new Error('Something Went Wrong');\n      }\n    } catch (err) {\n      alert(err.message);\n    }\n    const index = completed.findIndex(i => i.id === id);\n    completed.splice(index, 1);\n    setCompleted(completed);\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Completed Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), completed.map(entTask => /*#__PURE__*/_jsxDEV(TaskDetails, {\n      id: entTask.id,\n      startDate: entTask.startDate,\n      endDate: entTask.endDate,\n      description: entTask.description,\n      task: entTask.tasks,\n      completedTask: true,\n      onDelete: DeleteTaskHandler.bind(null, entTask.id)\n    }, entTask.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(Completedtasks, \"i9tDoIncxNy4Pu3rS5nEFamrQI4=\", false, function () {\n  return [useSelector];\n});\n_c = Completedtasks;\nexport default Completedtasks;\nvar _c;\n$RefreshReg$(_c, \"Completedtasks\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","useSelector","TaskDetails","jsxDEV","_jsxDEV","Completedtasks","_s","completed","setCompleted","userId","state","Auth","UID","fetchCompletedTasks","response","fetch","ok","Error","data","json","loadedTasks","key","push","id","tasks","startDate","endDate","description","console","log","err","alert","message","DeleteTaskHandler","method","index","findIndex","i","splice","Fragment","children","fileName","_jsxFileName","lineNumber","columnNumber","map","entTask","task","completedTask","onDelete","bind","_c","$RefreshReg$"],"sources":["C:/Users/vaibh/WebDevSharpner/ToDoList/src/Components/CompletedTasks/CompletedTasks.js"],"sourcesContent":["import React,{useCallback, useEffect, useState} from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport TaskDetails from \"../AddTasks/TaskDetails\";\r\n\r\nconst Completedtasks=()=>{\r\n    const [completed,setCompleted]=useState([])\r\n    const userId=useSelector((state)=>state.Auth.UID)\r\n\r\n    const fetchCompletedTasks= useCallback( async ()=>{\r\n        try{\r\n            const response =await fetch(`https://to-do-list-3e614-default-rtdb.asia-southeast1.firebasedatabase.app/Completed/${userId}.json`)\r\n            if(!response.ok){\r\n                throw new Error('Could not fetch completed tasks')\r\n            }\r\n            const data= await response.json()\r\n            const loadedTasks=[]\r\n            for(const key in data){\r\n                loadedTasks.push({\r\n                    id: key,\r\n                    tasks: data[key].tasks,\r\n                    startDate: data[key].startDate,\r\n                    endDate: data[key].endDate,\r\n                    description: data[key].description\r\n                })\r\n            }\r\n            console.log(loadedTasks)\r\n            setCompleted(loadedTasks)\r\n        }catch(err){\r\n            alert(err.message)\r\n        }\r\n    },[userId])\r\n\r\n    useEffect(()=>{\r\n        fetchCompletedTasks()\r\n    },[fetchCompletedTasks])\r\n\r\n    const DeleteTaskHandler=async (id)=>{\r\n        try{\r\n            const response =await fetch(`https://to-do-list-3e614-default-rtdb.asia-southeast1.firebasedatabase.app/Tasks/${userId}/${id}.json`,{\r\n              method: 'DELETE'\r\n            })\r\n            if(response.ok){\r\n              alert('Updated')\r\n            }else{\r\n              throw new Error('Something Went Wrong')\r\n            }\r\n          }catch(err){\r\n            alert(err.message)\r\n          }\r\n          const index=completed.findIndex((i)=>i.id===id)\r\n          completed.splice(index,1)\r\n          setCompleted(completed)\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <h1>Completed Tasks</h1>\r\n            {completed.map((entTask) => (\r\n          <TaskDetails\r\n            key={entTask.id}\r\n            id={entTask.id}\r\n            startDate={entTask.startDate}\r\n            endDate={entTask.endDate}\r\n            description={entTask.description}\r\n            task={entTask.tasks}\r\n            completedTask={true}\r\n            onDelete={DeleteTaskHandler.bind(null, entTask.id)}\r\n          />))}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Completedtasks"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAC5D,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,WAAW,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,cAAc,GAACA,CAAA,KAAI;EAAAC,EAAA;EACrB,MAAM,CAACC,SAAS,EAACC,YAAY,CAAC,GAACR,QAAQ,CAAC,EAAE,CAAC;EAC3C,MAAMS,MAAM,GAACR,WAAW,CAAES,KAAK,IAAGA,KAAK,CAACC,IAAI,CAACC,GAAG,CAAC;EAEjD,MAAMC,mBAAmB,GAAEf,WAAW,CAAE,YAAU;IAC9C,IAAG;MACC,MAAMgB,QAAQ,GAAE,MAAMC,KAAK,CAAE,wFAAuFN,MAAO,OAAM,CAAC;MAClI,IAAG,CAACK,QAAQ,CAACE,EAAE,EAAC;QACZ,MAAM,IAAIC,KAAK,CAAC,iCAAiC,CAAC;MACtD;MACA,MAAMC,IAAI,GAAE,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MACjC,MAAMC,WAAW,GAAC,EAAE;MACpB,KAAI,MAAMC,GAAG,IAAIH,IAAI,EAAC;QAClBE,WAAW,CAACE,IAAI,CAAC;UACbC,EAAE,EAAEF,GAAG;UACPG,KAAK,EAAEN,IAAI,CAACG,GAAG,CAAC,CAACG,KAAK;UACtBC,SAAS,EAAEP,IAAI,CAACG,GAAG,CAAC,CAACI,SAAS;UAC9BC,OAAO,EAAER,IAAI,CAACG,GAAG,CAAC,CAACK,OAAO;UAC1BC,WAAW,EAAET,IAAI,CAACG,GAAG,CAAC,CAACM;QAC3B,CAAC,CAAC;MACN;MACAC,OAAO,CAACC,GAAG,CAACT,WAAW,CAAC;MACxBZ,YAAY,CAACY,WAAW,CAAC;IAC7B,CAAC,QAAMU,GAAG,EAAC;MACPC,KAAK,CAACD,GAAG,CAACE,OAAO,CAAC;IACtB;EACJ,CAAC,EAAC,CAACvB,MAAM,CAAC,CAAC;EAEXV,SAAS,CAAC,MAAI;IACVc,mBAAmB,CAAC,CAAC;EACzB,CAAC,EAAC,CAACA,mBAAmB,CAAC,CAAC;EAExB,MAAMoB,iBAAiB,GAAC,MAAOV,EAAE,IAAG;IAChC,IAAG;MACC,MAAMT,QAAQ,GAAE,MAAMC,KAAK,CAAE,oFAAmFN,MAAO,IAAGc,EAAG,OAAM,EAAC;QAClIW,MAAM,EAAE;MACV,CAAC,CAAC;MACF,IAAGpB,QAAQ,CAACE,EAAE,EAAC;QACbe,KAAK,CAAC,SAAS,CAAC;MAClB,CAAC,MAAI;QACH,MAAM,IAAId,KAAK,CAAC,sBAAsB,CAAC;MACzC;IACF,CAAC,QAAMa,GAAG,EAAC;MACTC,KAAK,CAACD,GAAG,CAACE,OAAO,CAAC;IACpB;IACA,MAAMG,KAAK,GAAC5B,SAAS,CAAC6B,SAAS,CAAEC,CAAC,IAAGA,CAAC,CAACd,EAAE,KAAGA,EAAE,CAAC;IAC/ChB,SAAS,CAAC+B,MAAM,CAACH,KAAK,EAAC,CAAC,CAAC;IACzB3B,YAAY,CAACD,SAAS,CAAC;EAC7B,CAAC;EAED,oBACIH,OAAA,CAACP,KAAK,CAAC0C,QAAQ;IAAAC,QAAA,gBACXpC,OAAA;MAAAoC,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACvBrC,SAAS,CAACsC,GAAG,CAAEC,OAAO,iBACzB1C,OAAA,CAACF,WAAW;MAEVqB,EAAE,EAAEuB,OAAO,CAACvB,EAAG;MACfE,SAAS,EAAEqB,OAAO,CAACrB,SAAU;MAC7BC,OAAO,EAAEoB,OAAO,CAACpB,OAAQ;MACzBC,WAAW,EAAEmB,OAAO,CAACnB,WAAY;MACjCoB,IAAI,EAAED,OAAO,CAACtB,KAAM;MACpBwB,aAAa,EAAE,IAAK;MACpBC,QAAQ,EAAEhB,iBAAiB,CAACiB,IAAI,CAAC,IAAI,EAAEJ,OAAO,CAACvB,EAAE;IAAE,GAP9CuB,OAAO,CAACvB,EAAE;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQhB,CAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAEzB,CAAC;AAAAtC,EAAA,CAlEKD,cAAc;EAAA,QAEHJ,WAAW;AAAA;AAAAkD,EAAA,GAFtB9C,cAAc;AAoEpB,eAAeA,cAAc;AAAA,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}