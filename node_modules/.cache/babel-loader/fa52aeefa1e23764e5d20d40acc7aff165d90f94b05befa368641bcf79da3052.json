{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vaibh\\\\WebDevSharpner\\\\MoviesList\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [fetchMovies, setFetchMovies] = useState([]);\n  const [IsLoading, setisLoading] = useState(false);\n  const [error, setError] = useState(null);\n  async function fetchMovieshandler() {\n    setError(null);\n    setisLoading(true);\n    try {\n      const response = await fetch('https://swapi.dev/api/film/');\n      if (!response.ok) {\n        throw new Error('Something went wrong...Retrying');\n      }\n      const data = await response.json();\n      const TransformerdData = data.results.map(MovieData => {\n        return {\n          id: MovieData.episode_id,\n          title: MovieData.title,\n          openingText: MovieData.opening_crawl,\n          releaseDate: MovieData.release_date\n        };\n      });\n      setFetchMovies(TransformerdData);\n    } catch (error) {\n      setError(Error.message);\n    }\n    setisLoading(false);\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMovieshandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [IsLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 23\n      }, this), !IsLoading && fetchMovies.length === 0 && !error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No Movies Found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 60\n      }, this), !IsLoading && fetchMovies.length > 0 && /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: fetchMovies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 48\n      }, this), !IsLoading && error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"6TPt3U0d4uq8EY+pxKyM4TiRXIA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MoviesList","jsxDEV","_jsxDEV","App","_s","fetchMovies","setFetchMovies","IsLoading","setisLoading","error","setError","fetchMovieshandler","response","fetch","ok","Error","data","json","TransformerdData","results","map","MovieData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","message","Fragment","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","length","movies","_c","$RefreshReg$"],"sources":["C:/Users/vaibh/WebDevSharpner/MoviesList/src/App.js"],"sourcesContent":["import React,{useState} from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n\n  const [fetchMovies,setFetchMovies]=useState([])\n  const [IsLoading,setisLoading]=useState(false)\n  const [error,setError]=useState(null)\n\n\n  async function fetchMovieshandler(){\n    setError(null)\n    setisLoading(true)\n    try{\n      const response= await fetch('https://swapi.dev/api/film/')\n\n\n    if(!response.ok){\n      throw new Error('Something went wrong...Retrying')\n    }\n\n    const data= await response.json()\n\n    const TransformerdData=data.results.map(MovieData=>{\n        return { \n            id: MovieData.episode_id,\n            title: MovieData.title,\n            openingText: MovieData.opening_crawl,\n            releaseDate: MovieData.release_date\n          }\n       }\n      )\n      setFetchMovies(TransformerdData)\n    }\n    catch (error) {\n      setError(Error.message)\n    }\n    setisLoading(false)\n  }\n  \n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMovieshandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {IsLoading && <p>Loading...</p>}\n        {!IsLoading && fetchMovies.length===0 && !error && <p>No Movies Found.</p>}\n        {!IsLoading && fetchMovies.length>0 && <MoviesList movies={fetchMovies} />}\n        {!IsLoading && error && <p>{error}</p>}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}