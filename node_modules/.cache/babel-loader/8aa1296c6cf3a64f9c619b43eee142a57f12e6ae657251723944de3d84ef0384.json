{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vaibh\\\\WebDevSharpner\\\\ToDoList\\\\src\\\\Components\\\\AddTasks\\\\AddTasks.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport AddTaskForm from \"./AddTaskForm\";\nimport { useSelector } from \"react-redux\";\nimport \"./AddTasks.css\";\nimport TaskDetails from \"./TaskDetails\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddTasks = () => {\n  _s();\n  const [addTask, setAddTask] = useState(false);\n  const [enteredtasks, setTasks] = useState([]);\n  const userId = useSelector(state => state.Auth.UID);\n  const fetchtask = async () => {\n    try {\n      const response = await fetch(`https://to-do-list-3e614-default-rtdb.asia-southeast1.firebasedatabase.app/Tasks/${userId}.json`);\n      if (response.ok) {\n        const data = await response.json();\n        const loadedTasks = [];\n        for (const key in data) {\n          loadedTasks.push({\n            id: key,\n            tasks: data[key].tasks,\n            startDate: data[key].startDate,\n            endDate: data[key].endDate\n          });\n        }\n        setTasks(loadedTasks);\n      } else {\n        throw new Error(\"Failed to fetch Tasks\");\n      }\n    } catch (err) {\n      alert(err.message);\n    }\n  };\n  useEffect(() => {\n    fetchtask();\n  }, [addTask]); // Execute fetchtask whenever addTask changes\n\n  const SubmitNewTask = async (enteredTask, startDate, endDate) => {\n    try {\n      const response = await fetch(`https://to-do-list-3e614-default-rtdb.asia-southeast1.firebasedatabase.app/Tasks/${userId}.json`, {\n        method: \"POST\",\n        body: JSON.stringify({\n          tasks: enteredTask,\n          startDate: startDate,\n          endDate: endDate\n        })\n      });\n      if (response.ok) {\n        alert(\"Task has been updated\");\n        fetchtask();\n      } else {\n        throw new Error(\"Could not store the Task\");\n      }\n    } catch (err) {\n      alert(err.message);\n    }\n  };\n  const addTaskHandler = () => {\n    setAddTask(true);\n  };\n  const StateChangeHandler = f => {\n    setAddTask(f);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-tasks-container\",\n    children: [!addTask && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-task-button\",\n      onClick: addTaskHandler,\n      children: \"Add New Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), addTask && /*#__PURE__*/_jsxDEV(AddTaskForm, {\n      onStateChange: StateChangeHandler,\n      onSubmitTask: SubmitNewTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: enteredtasks.map(enttask => /*#__PURE__*/_jsxDEV(TaskDetails, {\n        task: enttask.tasks,\n        startDate: enttask.startDate,\n        endDate: enttask.endDate\n      }, enttask.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(AddTasks, \"QWKrm/P6WBgje29QD10j081cwaQ=\", false, function () {\n  return [useSelector];\n});\n_c = AddTasks;\nexport default AddTasks;\nvar _c;\n$RefreshReg$(_c, \"AddTasks\");","map":{"version":3,"names":["React","useState","useEffect","AddTaskForm","useSelector","TaskDetails","jsxDEV","_jsxDEV","AddTasks","_s","addTask","setAddTask","enteredtasks","setTasks","userId","state","Auth","UID","fetchtask","response","fetch","ok","data","json","loadedTasks","key","push","id","tasks","startDate","endDate","Error","err","alert","message","SubmitNewTask","enteredTask","method","body","JSON","stringify","addTaskHandler","StateChangeHandler","f","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onStateChange","onSubmitTask","map","enttask","task","_c","$RefreshReg$"],"sources":["C:/Users/vaibh/WebDevSharpner/ToDoList/src/Components/AddTasks/AddTasks.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport AddTaskForm from \"./AddTaskForm\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./AddTasks.css\";\r\nimport TaskDetails from \"./TaskDetails\";\r\n\r\nconst AddTasks = () => {\r\n  const [addTask, setAddTask] = useState(false);\r\n  const [enteredtasks, setTasks] = useState([]);\r\n  const userId = useSelector((state) => state.Auth.UID);\r\n\r\n  const fetchtask = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        `https://to-do-list-3e614-default-rtdb.asia-southeast1.firebasedatabase.app/Tasks/${userId}.json`\r\n      );\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n\r\n        const loadedTasks = [];\r\n        for (const key in data) {\r\n          loadedTasks.push({\r\n            id: key,\r\n            tasks: data[key].tasks,\r\n            startDate: data[key].startDate,\r\n            endDate: data[key].endDate,\r\n          });\r\n        }\r\n        setTasks(loadedTasks);\r\n      } else {\r\n        throw new Error(\"Failed to fetch Tasks\");\r\n      }\r\n    } catch (err) {\r\n      alert(err.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchtask();\r\n  }, [addTask]); // Execute fetchtask whenever addTask changes\r\n\r\n  const SubmitNewTask = async (enteredTask, startDate, endDate) => {\r\n    try {\r\n      const response = await fetch(\r\n        `https://to-do-list-3e614-default-rtdb.asia-southeast1.firebasedatabase.app/Tasks/${userId}.json`,\r\n        {\r\n          method: \"POST\",\r\n          body: JSON.stringify({\r\n            tasks: enteredTask,\r\n            startDate: startDate,\r\n            endDate: endDate,\r\n          }),\r\n        }\r\n      );\r\n      if (response.ok) {\r\n        alert(\"Task has been updated\");\r\n        fetchtask();\r\n      } else {\r\n        throw new Error(\"Could not store the Task\");\r\n      }\r\n    } catch (err) {\r\n      alert(err.message);\r\n    }\r\n  };\r\n\r\n  const addTaskHandler = () => {\r\n    setAddTask(true);\r\n  };\r\n\r\n  const StateChangeHandler = (f) => {\r\n    setAddTask(f);\r\n  };\r\n\r\n  return (\r\n    <div className=\"add-tasks-container\">\r\n      {!addTask && (\r\n        <button className=\"add-task-button\" onClick={addTaskHandler}>\r\n          Add New Task\r\n        </button>\r\n      )}\r\n      {addTask && <AddTaskForm onStateChange={StateChangeHandler} onSubmitTask={SubmitNewTask} />}\r\n      <ul>\r\n        {enteredtasks.map((enttask) => (\r\n          <TaskDetails\r\n            key={enttask.id}\r\n            task={enttask.tasks}\r\n            startDate={enttask.startDate}\r\n            endDate={enttask.endDate}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTasks;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}