{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vaibh\\\\WebDevSharpner\\\\ToDoList\\\\src\\\\Components\\\\AddTasks\\\\AddTaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./AddTaskForm.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { TaskActions } from \"../../Store/Auth-Redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddTaskForm = props => {\n  _s();\n  const [enteredTask, setEnteredTask] = useState(\"\");\n  const [startDate, setStartDate] = useState(\"\");\n  const [endDate, setEndDate] = useState(\"\");\n  const dispatch = useDispatch();\n  const [tasks, setTasks] = useState([]);\n  const userId = useSelector(state => state.Auth.UID);\n  useEffect(() => {\n    fetchtask();\n  }, []);\n  const fetchtask = async () => {\n    try {\n      const response = await fetch(`https://to-do-list-3e614-default-rtdb.asia-southeast1.firebasedatabase.app/Tasks/${userId}.json`);\n      if (response.ok) {\n        const data = await response.json();\n        const loadedTasks = [];\n        for (const key in data) {\n          loadedTasks.push({\n            id: key,\n            tasks: data[key].tasks,\n            startDate: data[key].startDate,\n            endDate: data[key].endDate\n          });\n        }\n        setTasks(loadedTasks);\n      } else {\n        throw new Error('Failed to fetch Tasks');\n      }\n    } catch (err) {\n      alert(err.message);\n    }\n  };\n  const TaskChangeHandler = event => {\n    setEnteredTask(event.target.value);\n    dispatch(TaskActions.Tasks(event.target.value));\n  };\n  const StartDateHandler = event => {\n    setStartDate(event.target.value);\n    dispatch(TaskActions.StartDate(event.target.value));\n  };\n  const EndDateHandler = event => {\n    setEndDate(event.target.value);\n    dispatch(TaskActions.EndDate(event.target.value));\n  };\n  const ResetHandler = event => {\n    event.preventDefault();\n    props.onStateChange(false);\n  };\n  const SubmitHandler = event => {\n    event.preventDefault();\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: SubmitHandler,\n      onReset: ResetHandler,\n      className: \"add-task-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-task-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-task-control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"task\",\n            children: \"Enter Task:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"task\",\n            type: \"text\",\n            value: enteredTask,\n            onChange: TaskChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-task-control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"StartDate\",\n            children: \"Start Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"StartDate\",\n            type: \"date\",\n            value: startDate,\n            onChange: StartDateHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-task-control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"EndDate\",\n            children: \"End Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"EndDate\",\n            type: \"date\",\n            value: endDate,\n            onChange: EndDateHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-task-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"reset\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(AddTaskForm, \"oQy07IDfP57w7Qq+M1eVYWb08jI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = AddTaskForm;\nexport default AddTaskForm;\nvar _c;\n$RefreshReg$(_c, \"AddTaskForm\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","TaskActions","jsxDEV","_jsxDEV","AddTaskForm","props","_s","enteredTask","setEnteredTask","startDate","setStartDate","endDate","setEndDate","dispatch","tasks","setTasks","userId","state","Auth","UID","fetchtask","response","fetch","ok","data","json","loadedTasks","key","push","id","Error","err","alert","message","TaskChangeHandler","event","target","value","Tasks","StartDateHandler","StartDate","EndDateHandler","EndDate","ResetHandler","preventDefault","onStateChange","SubmitHandler","Fragment","children","onSubmit","onReset","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","_c","$RefreshReg$"],"sources":["C:/Users/vaibh/WebDevSharpner/ToDoList/src/Components/AddTasks/AddTaskForm.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./AddTaskForm.css\"; \r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { TaskActions } from \"../../Store/Auth-Redux\";\r\n\r\nconst AddTaskForm = (props) => {\r\n  const [enteredTask, setEnteredTask] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\"\");\r\n  const [endDate, setEndDate] = useState(\"\");\r\n  const dispatch= useDispatch()\r\n  const [tasks,setTasks]=useState([])\r\n  const userId=useSelector((state)=>state.Auth.UID)\r\n\r\n  useEffect(()=>{\r\n    fetchtask()\r\n  },[])\r\n\r\n  const fetchtask= async ()=>{\r\n\r\n    try{\r\n        const response =await fetch(`https://to-do-list-3e614-default-rtdb.asia-southeast1.firebasedatabase.app/Tasks/${userId}.json`)\r\n        if (response.ok) {\r\n            const data = await response.json();\r\n            \r\n            const loadedTasks = [];\r\n            for (const key in data) {\r\n                loadedTasks.push({\r\n                  id: key,\r\n                  tasks: data[key].tasks,\r\n                  startDate: data[key].startDate,\r\n                  endDate: data[key].endDate\r\n                });\r\n             \r\n            }\r\n            setTasks(loadedTasks);\r\n          } else {\r\n            throw new Error('Failed to fetch Tasks');\r\n          }\r\n    }catch(err){\r\n        alert(err.message)\r\n    }\r\n  }\r\n\r\n  const TaskChangeHandler = (event) => {\r\n    setEnteredTask(event.target.value);\r\n    dispatch(TaskActions.Tasks(event.target.value))\r\n  };\r\n\r\n  const StartDateHandler = (event) => {\r\n    setStartDate(event.target.value);\r\n    dispatch(TaskActions.StartDate(event.target.value))\r\n  };\r\n\r\n  const EndDateHandler = (event) => {\r\n    setEndDate(event.target.value);\r\n    dispatch(TaskActions.EndDate(event.target.value))\r\n  };\r\n\r\n  const ResetHandler = (event) => {\r\n    event.preventDefault();\r\n    props.onStateChange(false);\r\n  };\r\n\r\n  \r\n\r\n  const SubmitHandler =  (event) => {\r\n    event.preventDefault();\r\n    \r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n    <form onSubmit={SubmitHandler} onReset={ResetHandler} className=\"add-task-form\">\r\n      <div className=\"new-task-controls\">\r\n        <div className=\"new-task-control\">\r\n          <label htmlFor=\"task\">Enter Task:</label>\r\n          <input id=\"task\" type=\"text\" value={enteredTask} onChange={TaskChangeHandler} />\r\n        </div>\r\n        <div className=\"new-task-control\">\r\n          <label htmlFor=\"StartDate\">Start Date:</label>\r\n          <input id=\"StartDate\" type=\"date\" value={startDate} onChange={StartDateHandler} />\r\n        </div>\r\n        <div className=\"new-task-control\">\r\n          <label htmlFor=\"EndDate\">End Date:</label>\r\n          <input id=\"EndDate\" type=\"date\" value={endDate} onChange={EndDateHandler} />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-task-actions\">\r\n        <button type=\"reset\">Cancel</button>\r\n        <button type=\"submit\">Add Task</button>\r\n      </div>\r\n    </form>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AddTaskForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}