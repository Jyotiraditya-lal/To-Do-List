{"ast":null,"code":"import { configureStore, createSlice } from '@reduxjs/toolkit';\nconst initialState = localStorage.getItem('token');\nconst AuthState = {\n  isLoggedin: initialState,\n  idToken: '',\n  UID: '',\n  Name: '',\n  email: ''\n};\nconst AuthSlice = createSlice({\n  name: 'Auth',\n  initialState: AuthState,\n  reducers: {\n    login(state, action) {\n      localStorage.setItem('token', action.payload);\n      state.isLoggedin = true;\n      state.idToken = action.payload.idToken;\n      state.UID = action.payload.UID;\n      state.Name = action.payload.name;\n      state.email = action.payload.email;\n      console.log(state.Name, state.email);\n    },\n    logout(state) {\n      localStorage.removeItem('token');\n      state.isLoggedin = false;\n      state.idToken = undefined;\n      state.UID = undefined;\n      state.Name = undefined;\n      state.email = undefined;\n    }\n  }\n});\nconst store = configureStore({\n  reducer: {\n    Auth: AuthSlice.reducer\n  }\n});\nexport const AuthActions = AuthSlice.actions;\nexport default store;","map":{"version":3,"names":["configureStore","createSlice","initialState","localStorage","getItem","AuthState","isLoggedin","idToken","UID","Name","email","AuthSlice","name","reducers","login","state","action","setItem","payload","console","log","logout","removeItem","undefined","store","reducer","Auth","AuthActions","actions"],"sources":["C:/Users/vaibh/WebDevSharpner/ToDoList/src/Store/Auth-Redux.js"],"sourcesContent":["import {configureStore, createSlice} from '@reduxjs/toolkit'\r\n\r\nconst initialState= localStorage.getItem('token')\r\nconst AuthState={isLoggedin: initialState, idToken: '', UID: '', Name: '', email: ''}\r\n\r\nconst AuthSlice= createSlice({\r\n    name: 'Auth',\r\n    initialState: AuthState,\r\n    reducers: {\r\n        login(state,action){\r\n            localStorage.setItem('token', action.payload);\r\n            state.isLoggedin=true;\r\n            state.idToken=action.payload.idToken;\r\n            state.UID=action.payload.UID\r\n            state.Name=action.payload.name\r\n            state.email=action.payload.email\r\n            console.log(state.Name, state.email)\r\n        },\r\n\r\n        logout(state){\r\n            localStorage.removeItem('token');\r\n            state.isLoggedin=false;\r\n            state.idToken=undefined;\r\n            state.UID=undefined\r\n            state.Name=undefined\r\n            state.email=undefined\r\n        }\r\n    }\r\n})\r\n\r\n\r\nconst store=configureStore({\r\n    reducer: {Auth: AuthSlice.reducer}\r\n})\r\n\r\nexport const AuthActions=AuthSlice.actions\r\n\r\nexport default store"],"mappings":"AAAA,SAAQA,cAAc,EAAEC,WAAW,QAAO,kBAAkB;AAE5D,MAAMC,YAAY,GAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;AACjD,MAAMC,SAAS,GAAC;EAACC,UAAU,EAAEJ,YAAY;EAAEK,OAAO,EAAE,EAAE;EAAEC,GAAG,EAAE,EAAE;EAAEC,IAAI,EAAE,EAAE;EAAEC,KAAK,EAAE;AAAE,CAAC;AAErF,MAAMC,SAAS,GAAEV,WAAW,CAAC;EACzBW,IAAI,EAAE,MAAM;EACZV,YAAY,EAAEG,SAAS;EACvBQ,QAAQ,EAAE;IACNC,KAAKA,CAACC,KAAK,EAACC,MAAM,EAAC;MACfb,YAAY,CAACc,OAAO,CAAC,OAAO,EAAED,MAAM,CAACE,OAAO,CAAC;MAC7CH,KAAK,CAACT,UAAU,GAAC,IAAI;MACrBS,KAAK,CAACR,OAAO,GAACS,MAAM,CAACE,OAAO,CAACX,OAAO;MACpCQ,KAAK,CAACP,GAAG,GAACQ,MAAM,CAACE,OAAO,CAACV,GAAG;MAC5BO,KAAK,CAACN,IAAI,GAACO,MAAM,CAACE,OAAO,CAACN,IAAI;MAC9BG,KAAK,CAACL,KAAK,GAACM,MAAM,CAACE,OAAO,CAACR,KAAK;MAChCS,OAAO,CAACC,GAAG,CAACL,KAAK,CAACN,IAAI,EAAEM,KAAK,CAACL,KAAK,CAAC;IACxC,CAAC;IAEDW,MAAMA,CAACN,KAAK,EAAC;MACTZ,YAAY,CAACmB,UAAU,CAAC,OAAO,CAAC;MAChCP,KAAK,CAACT,UAAU,GAAC,KAAK;MACtBS,KAAK,CAACR,OAAO,GAACgB,SAAS;MACvBR,KAAK,CAACP,GAAG,GAACe,SAAS;MACnBR,KAAK,CAACN,IAAI,GAACc,SAAS;MACpBR,KAAK,CAACL,KAAK,GAACa,SAAS;IACzB;EACJ;AACJ,CAAC,CAAC;AAGF,MAAMC,KAAK,GAACxB,cAAc,CAAC;EACvByB,OAAO,EAAE;IAACC,IAAI,EAAEf,SAAS,CAACc;EAAO;AACrC,CAAC,CAAC;AAEF,OAAO,MAAME,WAAW,GAAChB,SAAS,CAACiB,OAAO;AAE1C,eAAeJ,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}