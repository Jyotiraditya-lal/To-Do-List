{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vaibh\\\\WebDevSharpner\\\\ToDoList\\\\src\\\\Components\\\\AddTasks\\\\AddTasks.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport AddTaskForm from \"./AddTaskForm\";\nimport { useSelector } from \"react-redux\";\nimport \"./AddTasks.css\"; // Import your custom CSS file\nimport TaskDetails from \"./TaskDetails\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddTasks = () => {\n  _s();\n  const [addTask, setAddTask] = useState(false);\n  const [enteredtasks, setTasks] = useState([]);\n  const userId = useSelector(state => state.Auth.UID);\n  useEffect(() => {\n    fetchtask();\n  }, []);\n  const fetchtask = async () => {\n    try {\n      const response = await fetch(`https://to-do-list-3e614-default-rtdb.asia-southeast1.firebasedatabase.app/Tasks/${userId}.json`);\n      if (response.ok) {\n        const data = await response.json();\n        const loadedTasks = [];\n        for (const key in data) {\n          loadedTasks.push({\n            id: key,\n            tasks: data[key].tasks,\n            startDate: data[key].startDate,\n            endDate: data[key].endDate\n          });\n        }\n        setTasks(loadedTasks);\n      } else {\n        throw new Error('Failed to fetch Tasks');\n      }\n    } catch (err) {\n      alert(err.message);\n    }\n  };\n  const SubmitNewTask = async (enteredTask, startDate, endDate) => {\n    try {\n      const response = await fetch(`https://to-do-list-3e614-default-rtdb.asia-southeast1.firebasedatabase.app/Tasks/${userId}.json`, {\n        method: 'POST',\n        body: JSON.stringify({\n          tasks: enteredTask,\n          startDate: startDate,\n          endDate: endDate\n        })\n      });\n      if (response.ok) {\n        alert('Task has been updated');\n        fetchtask();\n      } else {\n        throw new Error('Could not store the Task');\n      }\n    } catch (err) {\n      alert(err.message);\n    }\n  };\n  const addTaskHandler = () => {\n    setAddTask(true);\n  };\n  const StateChangeHandler = f => {\n    setAddTask(f);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-tasks-container\",\n    children: [!addTask && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-task-button\",\n      onClick: addTaskHandler,\n      children: \"Add New Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), addTask && /*#__PURE__*/_jsxDEV(AddTaskForm, {\n      onStateChange: StateChangeHandler,\n      onSubmitTask: SubmitNewTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: enteredtasks.map(enttask => /*#__PURE__*/_jsxDEV(TaskDetails, {\n        task: enttask.tasks,\n        startDate: enttask.startDate,\n        endDate: enttask.endDate\n      }, enttask.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(AddTasks, \"sjig+HlyPOeUTNYw+lTij5DHFYE=\", false, function () {\n  return [useSelector];\n});\n_c = AddTasks;\nexport default AddTasks;\nvar _c;\n$RefreshReg$(_c, \"AddTasks\");","map":{"version":3,"names":["React","useState","useEffect","AddTaskForm","useSelector","TaskDetails","jsxDEV","_jsxDEV","AddTasks","_s","addTask","setAddTask","enteredtasks","setTasks","userId","state","Auth","UID","fetchtask","response","fetch","ok","data","json","loadedTasks","key","push","id","tasks","startDate","endDate","Error","err","alert","message","SubmitNewTask","enteredTask","method","body","JSON","stringify","addTaskHandler","StateChangeHandler","f","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onStateChange","onSubmitTask","map","enttask","task","_c","$RefreshReg$"],"sources":["C:/Users/vaibh/WebDevSharpner/ToDoList/src/Components/AddTasks/AddTasks.js"],"sourcesContent":["import React, { useState,useEffect } from \"react\";\r\nimport AddTaskForm from \"./AddTaskForm\";\r\nimport {  useSelector } from \"react-redux\";\r\nimport \"./AddTasks.css\"; // Import your custom CSS file\r\nimport TaskDetails from \"./TaskDetails\";\r\n\r\nconst AddTasks = () => {\r\n  const [addTask, setAddTask] = useState(false);\r\n  \r\n  const [enteredtasks,setTasks]=useState([])\r\n  const userId=useSelector((state)=>state.Auth.UID)\r\n\r\n  useEffect(()=>{\r\n    fetchtask()\r\n  },[])\r\n\r\n  const fetchtask= async ()=>{\r\n\r\n    try{\r\n        const response =await fetch(`https://to-do-list-3e614-default-rtdb.asia-southeast1.firebasedatabase.app/Tasks/${userId}.json`)\r\n        if (response.ok) {\r\n            const data = await response.json();\r\n            \r\n            const loadedTasks = [];\r\n            for (const key in data) {\r\n                loadedTasks.push({\r\n                  id: key,\r\n                  tasks: data[key].tasks,\r\n                  startDate: data[key].startDate,\r\n                  endDate: data[key].endDate\r\n                });\r\n             \r\n            }\r\n            setTasks(loadedTasks);\r\n          } else {\r\n            throw new Error('Failed to fetch Tasks');\r\n          }\r\n    }catch(err){\r\n        alert(err.message)\r\n    }\r\n  }\r\n\r\n  const SubmitNewTask= async (enteredTask,startDate,endDate)=>{\r\n    try{\r\n        const response =await fetch(`https://to-do-list-3e614-default-rtdb.asia-southeast1.firebasedatabase.app/Tasks/${userId}.json`,{\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                tasks: enteredTask,\r\n                startDate: startDate,\r\n                endDate: endDate\r\n            })\r\n        })\r\n        if (response.ok) {\r\n            alert('Task has been updated');\r\n            \r\n            fetchtask();\r\n          } else {\r\n            throw new Error('Could not store the Task');\r\n          }\r\n    }catch(err){\r\n        alert(err.message)\r\n    }\r\n  }\r\n\r\n  const addTaskHandler = () => {\r\n    setAddTask(true);\r\n  };\r\n\r\n  const StateChangeHandler=(f)=>{\r\n    setAddTask(f)\r\n  }\r\n\r\n  return (\r\n    <div className=\"add-tasks-container\">\r\n      {!addTask && (\r\n        <button className=\"add-task-button\" onClick={addTaskHandler}>\r\n          Add New Task\r\n        </button>\r\n      )}\r\n      {addTask && <AddTaskForm onStateChange={StateChangeHandler} onSubmitTask={SubmitNewTask} />}\r\n      <ul>\r\n        {enteredtasks.map((enttask)=>(\r\n            <TaskDetails \r\n                key={enttask.id}\r\n                task={enttask.tasks}\r\n                startDate={enttask.startDate}\r\n                endDate={enttask.endDate}\r\n            />\r\n          ))}\r\n    </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTasks;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}