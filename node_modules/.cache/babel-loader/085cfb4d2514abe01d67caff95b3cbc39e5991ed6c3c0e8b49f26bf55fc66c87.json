{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vaibh\\\\WebDevSharpner\\\\ToDoList\\\\src\\\\Components\\\\CompletedTasks\\\\CompletedTasks.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Completedtasks = () => {\n  _s();\n  const [completed, setCompleted] = useState([]);\n  const userId = useSelector(state => state.Auth.UID);\n  const fetchCompletedTasks = async () => {\n    try {\n      const response = await fetch(`https://to-do-list-3e614-default-rtdb.asia-southeast1.firebasedatabase.app/Completed/${userId}.json`);\n      if (!response.ok) {\n        throw new Error('Could not fetch completed tasks');\n      }\n      const data = await response.json();\n      const loadedTasks = [];\n      for (const key in data) {\n        loadedTasks.push({\n          id: key,\n          task: data[key].tasks,\n          startDate: data[key].startDate,\n          endDate: data[key].endDate,\n          description: data[key].description\n        });\n      }\n      setCompleted(loadedTasks);\n    } catch (err) {\n      alert(err.message);\n    }\n  };\n  useEffect(() => {\n    fetchCompletedTasks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Completed Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), completed.map(entTask => /*#__PURE__*/_jsxDEV(TaskDetails, {\n      id: entTask.id,\n      startDate: entTask.startDate,\n      endDate: entTask.endDate,\n      description: entTask.description,\n      task: entTask.tasks,\n      completedTask: true\n      // onCompleted={CompleteHandler.bind(null, entTask.id)}\n    }, entTask.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(Completedtasks, \"XveP7zbfvNjkc/I6nMcmuS+lJ18=\", false, function () {\n  return [useSelector];\n});\n_c = Completedtasks;\nexport default Completedtasks;\nvar _c;\n$RefreshReg$(_c, \"Completedtasks\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","jsxDEV","_jsxDEV","Completedtasks","_s","completed","setCompleted","userId","state","Auth","UID","fetchCompletedTasks","response","fetch","ok","Error","data","json","loadedTasks","key","push","id","task","tasks","startDate","endDate","description","err","alert","message","Fragment","children","fileName","_jsxFileName","lineNumber","columnNumber","map","entTask","TaskDetails","completedTask","_c","$RefreshReg$"],"sources":["C:/Users/vaibh/WebDevSharpner/ToDoList/src/Components/CompletedTasks/CompletedTasks.js"],"sourcesContent":["import React,{useEffect, useState} from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Completedtasks=()=>{\r\n    const [completed,setCompleted]=useState([])\r\n    const userId=useSelector((state)=>state.Auth.UID)\r\n\r\n    const fetchCompletedTasks= async ()=>{\r\n        try{\r\n            const response =await fetch(`https://to-do-list-3e614-default-rtdb.asia-southeast1.firebasedatabase.app/Completed/${userId}.json`)\r\n            if(!response.ok){\r\n                throw new Error('Could not fetch completed tasks')\r\n            }\r\n            const data= await response.json()\r\n            const loadedTasks=[]\r\n            for(const key in data){\r\n                loadedTasks.push({\r\n                    id: key,\r\n                    task: data[key].tasks,\r\n                    startDate: data[key].startDate,\r\n                    endDate: data[key].endDate,\r\n                    description: data[key].description\r\n                })\r\n            }\r\n            setCompleted(loadedTasks)\r\n        }catch(err){\r\n            alert(err.message)\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetchCompletedTasks()\r\n    },[])\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <h1>Completed Tasks</h1>\r\n            {completed.map((entTask) => (\r\n          <TaskDetails\r\n            key={entTask.id}\r\n            id={entTask.id}\r\n            startDate={entTask.startDate}\r\n            endDate={entTask.endDate}\r\n            description={entTask.description}\r\n            task={entTask.tasks}\r\n            completedTask={true}\r\n           // onCompleted={CompleteHandler.bind(null, entTask.id)}\r\n          />))}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Completedtasks"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAC/C,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,cAAc,GAACA,CAAA,KAAI;EAAAC,EAAA;EACrB,MAAM,CAACC,SAAS,EAACC,YAAY,CAAC,GAACP,QAAQ,CAAC,EAAE,CAAC;EAC3C,MAAMQ,MAAM,GAACP,WAAW,CAAEQ,KAAK,IAAGA,KAAK,CAACC,IAAI,CAACC,GAAG,CAAC;EAEjD,MAAMC,mBAAmB,GAAE,MAAAA,CAAA,KAAU;IACjC,IAAG;MACC,MAAMC,QAAQ,GAAE,MAAMC,KAAK,CAAE,wFAAuFN,MAAO,OAAM,CAAC;MAClI,IAAG,CAACK,QAAQ,CAACE,EAAE,EAAC;QACZ,MAAM,IAAIC,KAAK,CAAC,iCAAiC,CAAC;MACtD;MACA,MAAMC,IAAI,GAAE,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MACjC,MAAMC,WAAW,GAAC,EAAE;MACpB,KAAI,MAAMC,GAAG,IAAIH,IAAI,EAAC;QAClBE,WAAW,CAACE,IAAI,CAAC;UACbC,EAAE,EAAEF,GAAG;UACPG,IAAI,EAAEN,IAAI,CAACG,GAAG,CAAC,CAACI,KAAK;UACrBC,SAAS,EAAER,IAAI,CAACG,GAAG,CAAC,CAACK,SAAS;UAC9BC,OAAO,EAAET,IAAI,CAACG,GAAG,CAAC,CAACM,OAAO;UAC1BC,WAAW,EAAEV,IAAI,CAACG,GAAG,CAAC,CAACO;QAC3B,CAAC,CAAC;MACN;MACApB,YAAY,CAACY,WAAW,CAAC;IAC7B,CAAC,QAAMS,GAAG,EAAC;MACPC,KAAK,CAACD,GAAG,CAACE,OAAO,CAAC;IACtB;EACJ,CAAC;EAED/B,SAAS,CAAC,MAAI;IACVa,mBAAmB,CAAC,CAAC;EACzB,CAAC,EAAC,EAAE,CAAC;EAEL,oBACIT,OAAA,CAACL,KAAK,CAACiC,QAAQ;IAAAC,QAAA,gBACX7B,OAAA;MAAA6B,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACvB9B,SAAS,CAAC+B,GAAG,CAAEC,OAAO,iBACzBnC,OAAA,CAACoC,WAAW;MAEVjB,EAAE,EAAEgB,OAAO,CAAChB,EAAG;MACfG,SAAS,EAAEa,OAAO,CAACb,SAAU;MAC7BC,OAAO,EAAEY,OAAO,CAACZ,OAAQ;MACzBC,WAAW,EAAEW,OAAO,CAACX,WAAY;MACjCJ,IAAI,EAAEe,OAAO,CAACd,KAAM;MACpBgB,aAAa,EAAE;MAChB;IAAA,GAPMF,OAAO,CAAChB,EAAE;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQhB,CAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAEzB,CAAC;AAAA/B,EAAA,CA/CKD,cAAc;EAAA,QAEHH,WAAW;AAAA;AAAAwC,EAAA,GAFtBrC,cAAc;AAiDpB,eAAeA,cAAc;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}