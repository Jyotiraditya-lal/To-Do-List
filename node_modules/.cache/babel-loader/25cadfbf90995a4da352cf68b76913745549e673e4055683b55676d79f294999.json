{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vaibh\\\\WebDevSharpner\\\\ToDoList\\\\src\\\\Components\\\\AddTasks\\\\TaskDetails.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Container, Card } from \"react-bootstrap\";\nimport './TaskDetails.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskDetails = props => {\n  _s();\n  const [showModal, setShowModal] = useState(false);\n  const openModal = () => {\n    setShowModal(true);\n  };\n  const closeModal = () => {\n    setShowModal(false);\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      onClick: openModal,\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        className: \"task-item-container\",\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          className: \"task-card\",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: props.task\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 20\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"completed-button\",\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this)\n    }, props.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), showModal && /*#__PURE__*/_jsxDEV(Modal, {\n      showModal: showModal,\n      onClose: closeModal,\n      task: enteredTask,\n      startDate: startDate,\n      endDate: endDate,\n      description: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskDetails, \"uVlnG5KLfXemZk5i5Fl+Cg356FU=\");\n_c = TaskDetails;\nexport default TaskDetails;\nvar _c;\n$RefreshReg$(_c, \"TaskDetails\");","map":{"version":3,"names":["React","Container","Card","jsxDEV","_jsxDEV","TaskDetails","props","_s","showModal","setShowModal","useState","openModal","closeModal","Fragment","children","onClick","className","Body","task","fileName","_jsxFileName","lineNumber","columnNumber","id","Modal","onClose","enteredTask","startDate","endDate","description","_c","$RefreshReg$"],"sources":["C:/Users/vaibh/WebDevSharpner/ToDoList/src/Components/AddTasks/TaskDetails.js"],"sourcesContent":["import React from \"react\";\r\nimport { Container,Card } from \"react-bootstrap\";\r\nimport './TaskDetails.css'\r\n\r\nconst TaskDetails=(props)=>{\r\n    const [showModal, setShowModal] = useState(false);\r\n\r\n    const openModal = () => {\r\n        setShowModal(true);\r\n      };\r\n    \r\n      const closeModal = () => {\r\n        setShowModal(false);\r\n    \r\n      };\r\n    return(\r\n    <React.Fragment>\r\n        <li key={props.id} onClick={openModal}>\r\n            <Container className=\"task-item-container\">\r\n               <Card className=\"task-card\">\r\n                   <Card.Body>{props.task}</Card.Body>\r\n                </Card>\r\n                <button className=\"completed-button\">Completed</button>\r\n            </Container>\r\n        </li>\r\n        {showModal && (\r\n        <Modal\r\n          showModal={showModal}\r\n          onClose={closeModal}\r\n          task={enteredTask}\r\n          startDate={startDate}\r\n          endDate={endDate}\r\n          description={description}\r\n        />)}\r\n    </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default TaskDetails"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAACC,IAAI,QAAQ,iBAAiB;AAChD,OAAO,mBAAmB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAEC,KAAK,IAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGC,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACpBF,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMG,UAAU,GAAGA,CAAA,KAAM;IACvBH,YAAY,CAAC,KAAK,CAAC;EAErB,CAAC;EACH,oBACAL,OAAA,CAACJ,KAAK,CAACa,QAAQ;IAAAC,QAAA,gBACXV,OAAA;MAAmBW,OAAO,EAAEJ,SAAU;MAAAG,QAAA,eAClCV,OAAA,CAACH,SAAS;QAACe,SAAS,EAAC,qBAAqB;QAAAF,QAAA,gBACvCV,OAAA,CAACF,IAAI;UAACc,SAAS,EAAC,WAAW;UAAAF,QAAA,eACvBV,OAAA,CAACF,IAAI,CAACe,IAAI;YAAAH,QAAA,EAAER,KAAK,CAACY;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC,CAAC,eACPlB,OAAA;UAAQY,SAAS,EAAC,kBAAkB;UAAAF,QAAA,EAAC;QAAS;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD;IAAC,GANPhB,KAAK,CAACiB,EAAE;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOb,CAAC,EACJd,SAAS,iBACVJ,OAAA,CAACoB,KAAK;MACJhB,SAAS,EAAEA,SAAU;MACrBiB,OAAO,EAAEb,UAAW;MACpBM,IAAI,EAAEQ,WAAY;MAClBC,SAAS,EAAEA,SAAU;MACrBC,OAAO,EAAEA,OAAQ;MACjBC,WAAW,EAAEA;IAAY;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAErB,CAAC;AAAAf,EAAA,CAhCKF,WAAW;AAAAyB,EAAA,GAAXzB,WAAW;AAkCjB,eAAeA,WAAW;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}